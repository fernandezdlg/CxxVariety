#include <cassert>
#include <iostream>
#include <complex>
#include <cmath>
#include <vector>

#include <Eigen/Dense>
#include <unsupported/Eigen/FFT>

using namespace std;
using namespace Eigen;  // includes Scalar, Matrix**, Vector**, fft, etc.

// Implement FFT-2D on Eigen MatrixXd

template<typename Scalar>
void fft2(MatrixXcd& C, const MatrixBase<Scalar>& Y)
{
    // Y_{m, n}
    int m = Y.rows();
    int n = Y.cols();

    // C_{m, n}
    C.resize(m, n);
    MatrixXcd tmp(m, n);

    FFT<double> fft;

    // FIXME: Something shady here
    // Perform fft on rows of Y
    for (int i = 0; i < m; i++)
    {
        tmp.row(i) = fft.fwd(((VectorXcd) Y.row(i))).transpose();
        // fft.fwd(tmp.row(i), Y.row(i)); // Seems OK
    }
    // FIXME: Something shady here
    // Perform fft on columns of tmp
    for (int j = 0; j < n; j++)
    {
        C.col(j) = fft.fwd(((VectorXcd) tmp.col(j)));
        // fft.fwd(C.col(j), tmp.col(j));
    }
}

template<typename Scalar>
void ifft2(MatrixXcd& C, const MatrixBase<Scalar>& Y)
{
    int m = Y.rows();
    int n = Y.cols();
    fft2(C, Y.conjugate());
    C = C.conjugate() / (m * n);
}

void conv2(MatrixXcd& LHS, MatrixXcd& RHS1, MatrixXcd& RHS2)
{
    // RHS dims
    int n1 = RHS1.rows();
    int m1 = RHS1.cols();
    int n2 = RHS2.rows();
    int m2 = RHS2.cols();
    // LHS dims
    int n = n1 + n2 - 1;
    int m = m1 + m2 - 1;

    MatrixXcd tmp1    = MatrixXcd::Zero(n, m);
    MatrixXcd tmp2    = MatrixXcd::Zero(n, m);
    MatrixXcd extRHS1 = MatrixXcd::Zero(n, m);
    MatrixXcd extRHS2 = MatrixXcd::Zero(n, m);

    extRHS1.topLeftCorner(n1, m1) = RHS1;
    extRHS2.topLeftCorner(n2, m2) = RHS2;

    fft2(tmp1, extRHS1);
    fft2(tmp2, extRHS2);

    ifft2(LHS, tmp1.cwiseProduct(tmp2));
}

int main()
{
    // Test fft2 and ifft2
    MatrixXcd C(3, 3);
    C << 1, 2, 3, 4, 5, 6, 7, 8, 9;

    MatrixXcd Y(3, 3);
    cout << "Original Matrix C\n" << C << "\n\n";

    fft2(Y, C);
    cout << "Matrix Y = fft2(C)\n" << Y << "\n\n";

    MatrixXcd D(3, 3);
    ifft2(D, Y);
    cout << "Matrix D = ifft2(Y)\n" << D << "\n\n";


    // Test convolution
    MatrixXcd F(3, 3);
    F << 0, -1, 0, -1, 4, -1, 0, -1, 0;

    MatrixXcd FconvF = MatrixXcd::Zero(3, 3);
    conv2(FconvF, F, F);
    MatrixXi outFconvF = FconvF.real().cast<int>();
    cout << "conv(F,F) casted to real ints\n" << outFconvF << "\n\n";


    MatrixXcd logoETH = MatrixXcd::Zero(25, 77);
    logoETH << 
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,
        0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,
        0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,
        0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,
        0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,
        0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
        0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
        0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
        0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
        0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,
        0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
        0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
        0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
        0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
        0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
        0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
        0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
        0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
        0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
        0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
        0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
        0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
        0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;

    MatrixXcd conv = MatrixXcd::Zero(25, 77);
    conv2(conv, logoETH, F);
    MatrixXi outlogoETH = conv.real().cast<int>();
    cout << outlogoETH << endl;

    // Expected:
    // 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
    // 0  0  0  0  0  0  0  0 -1 -1 -1 -1  0 -1 -1  0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  0  0 -1  0 -1 -1  0 -1 -1  0 -1 -1 -1  0 -1  0  0 -1 -1 -1 -1 -1  0 -1 -1 -1 -1 -1  0  0 -1  0  0  0  0  0  0  0  0  0  0  0 -1 -1  0 -1 -1 -1  0  0  0  0
    // 0  0  0  0  0  0  0  0  2  1  1  1  1  1  1  1  1  0  1  1  1  0  1  1  1  1  1  0  1  1  1  1  0  1  1  1  1  1  1  1  1  1  1  1  0  1  1  1  1  0  1  1  1  1  1  1  1  1  1  1  2 -1  0  0  0  0  0 -1  2  0  0  1  1  1  1  2 -1  0  0
    // 0  0  0  0  0  0  0 -2  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  2 -1  0  0  0  0  0 -2  0  0  0  0  0  0  0  2 -1  0  0
    // 0  0  0  0  0  0 -1  2  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1 -1  0  0  0  0  0 -2  2  0  0  0  0  0  0  1 -2  0  0  0
    // 0  0  0  0  0  0 -1  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 -1  0  0  0  0 -1  2  0  0  0  0  0  0  0  1  0  0  0  0
    // 0  0  0  0  0  0 -1  1  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  1  1  1  1  1  1  1  1  1  0  0  0  1  0  0  0  0  0  0  0  0  1  1  1  1  1  1  1  0  0  0  0  0  0  0  0  1 -1  0  0  0  0 -1  1  0  0  0  0  0  0  0  2 -1  0  0  0
    // 0  0  0  0  0  0 -1  1  0  0  0  0  0  0  0  1 -2  0  0  0 -1  0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  0 -1 -2  1  0  0  0  0  0  0  0 -2 -1 -1 -1 -1 -1 -1 -2  0  0  0  0  0  0  0  1  0  0  0  0  0 -1  1  0  0  0  0  0  0  0 -2  0  0  0  0
    // 0  0  0  0  0  0 -2  0  0  0  0  0  0  0  0  2 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 -2  1  0  0  0  0  0  0  0 -1  0  0  0  0  0  0 -2  1  0  0  0  0  0  0  2  0  0  0  0  0 -1  0  0  0  0  0  0  0  0 -1  0  0  0  0
    // 0  0  0  0  0 -1  2  0  0  0  0  0  0  0  2 -2  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 -2  2  0  0  0  0  0  0  0  2 -1  0  0  0  0  0 -2  2  0  0  0  0  0  0  1 -2  0  0  0  0  0 -1  1  0  0  0  0  0  0  1 -1  0  0  0  0
    // 0  0  0  0  0 -1  0  0  0  0  0  0  0  0 -3  0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  0  0  0  0  0  0  2  0  0  0  0  0  0  0  0 -2  0  0  0  0  0  0  2  0  0  0  0  0  0  0  1 -1 -1  0 -1  0 -1 -2  1  0  0  0  0  0  0  1 -1  0  0  0  0
    // 0  0  0  0  0  0  1  0  0  0  0  0  0  0  1  0  1  1  1  1  1  1  1  1  1  1  2  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  0  2  0  0  0  0  0  0 -1  0  0  0  0  0  0  0  0  0  0  0  1  1  0  0  0  0  0  0  0  0  0  0  2  0  0  0  0  0
    // 0  0  0  0  0 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  2  0  0  0  0  0  0  0  1  0  0  0  0  0  0  1 -2  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1 -2  0  0  0  0  0
    // 0  0  0  0  0 -2  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1 -2  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  1  0  0  0  0  0  0  0 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1 -1  0  0  0  0  0
    // 0  0  0  0 -1  2  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  1 -1  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  2 -1  0  0  0  0  0
    // 0  0  0  0 -1  1  0  0  0  0  0  0  0  1  0  1  1  0  1  1  1  0  0  0  1  2 -1  0  0  0  0  0  0 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 -2  0  0  0  0  0  0  0  1  1  1  1  1  0  1  0  0  0  0  0  0  0  1 -2  0  0  0  0  0  0
    // 0  0  0  0 -1  1  0  0  0  0  0  0  0 -2 -1 -1 -1  0 -1 -1  0  0  0  0  0 -1  0  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  2 -1  0  0  0  0  0 -1  2  0  0  0  0  0  0  0 -2 -1 -1 -1 -1 -1 -2  1  0  0  0  0  0  0  0 -1  0  0  0  0  0  0
    // 0  0  0  0 -1  1  0  0  0  0  0  0  1 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 -1  2  0  0  0  0  0  0  1 -2  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  1  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  1 -1  0  0  0  0  0  0
    // 0  0  0  0 -2  1  0  0  0  0  0  0  0 -2 -1 -1 -1 -1 -1 -1 -1 -1 -1  0 -1  0  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  1 -1  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  1 -1  0  0  0  0  0 -1  1  0  0  0  0  0  0  1 -1  0  0  0  0  0  0
    // 0  0  0  0  2  0  0  0  0  0  0  0  0  1  1  1  1  1  0  1  1  1  1  1  2  0  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  2 -1  0  0  0  0  0  0 -2  0  0  0  0  0  0  0  2 -1  0  0  0  0  0 -2  1  0  0  0  0  0  0  0 -1  0  0  0  0  0  0
    // 0  0  0 -1  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1 -1  0  0  0  0  0 -1  2  0  0  0  0  0  0  1 -2  0  0  0  0  0  0 -1  2  0  0  0  0  0  0  1 -2  0  0  0  0  0 -1  2  0  0  0  0  0  0  0  0 -1  0  0  0  0  0  0
    // 0  0  0 -2  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  2 -1  0  0  0  0  0 -1  1  0  0  0  0  0  0  1  0  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  1 -1  0  0  0  0  0 -2  1  0  0  0  0  0  0  0  2 -1  0  0  0  0  0  0
    // 0  0 -1  2  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1 -2  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  1 -1  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  1 -1  0  0  0  0 -1  2  0  0  0  0  0  0  0  2 -2  0  0  0  0  0  0  0
    // 0  0 -1  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1 -1  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  1 -1  0  0  0  0  0  0 -1  1  0  0  0  0  0  0  1 -1  0  0  0  0 -1  1  0  0  0  0  0  0  1 -2  0  0  0  0  0  0  0  0
    // 0  0 -1  2  1  1  1  1  1  1  1  1  1  1  0  1  1  0  1  1  1  1  1  2 -1  0  0  0  0  0  0 -1  2  1  1  1  1  1  1  2 -1  0  0  0  0  0  0 -1  2  0  1  1  1  1  1  2 -1  0  0  0  0 -1  2  0  1  1  1  1  0  2 -1  0  0  0  0  0  0  0  0
    // 0  0  0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0 -1 -1  0 -1 -1 -1 -1 -1 -1 -1  0  0  0  0  0  0  0  0 -1  0 -1 -1 -1 -1 -1 -1  0  0  0  0  0  0  0  0 -1 -1 -1 -1 -1 -1 -1 -1  0  0  0  0  0  0  0  0 -1 -1 -1 -1 -1 -1  0  0  0  0  0  0  0  0  0
    // 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0

    return 0;
}